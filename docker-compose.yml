version: '3.9'
services:

  redis:
    container_name: redis
    image: redis
    restart: always
    networks:
      - my-network

  db_hans3d:
    container_name: db_hans3d
    image: postgres:12-alpine
    platform: linux/amd64
    restart: always
    expose:
      - 5432
    networks:
      - my-network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - ./db/db_hans3d:/var/lib/postgresql/data

  db_users:
    container_name: db_users
    image: postgres:12-alpine
    platform: linux/amd64
    restart: always
    expose:
      - 5432
    networks:
      - my-network
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=db_users
    volumes:
      - ./db/db_users:/var/lib/postgresql/data

  users:
    container_name: users
    build: ./backend/users
    restart: always
    networks:
      - my-network
    environment:
      - AUTH_URL=postgresql://postgres:1234567890@db_users:5432/db_users
    depends_on:
      - db_users
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

  hans3d:
    container_name: hans3d
    build: ./backend/hans3d
    restart: always
    networks:
      - my-network
    environment:
      - DATABASE_URL=postgresql://postgres:1234567890@db_hans3d:5432/db_hans3d
    depends_on:
      - db_hans3d
    volumes:
      - ./datas:/hans3d/datas/
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8003

  auth:
    container_name: auth
    build: ./backend/auth
    restart: always
    networks:
      - my-network
    ports:
      - 8002:8002
    environment:
      - URL_USERS=http://users:8000
      - URL_REDIS=redis
      - URL_HANS3D=http://hans3d:8003
    depends_on:
      - redis
      - users
      - hans3d
    volumes:
      - ./datas:/auth/datas/
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8002

  nginx:
    platform: linux/amd64
    container_name: nginx
    image: nginx
    restart: always
    networks:
      - my-network
    ports:
      - 80:80
    volumes:
      - ./frontend/build:/usr/share/nginx/html
      - ./default.conf:/etc/nginx/conf.d/default.conf

networks:
  my-network:
    driver: bridge